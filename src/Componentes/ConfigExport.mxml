<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx"
				   xmlns:modelo="services.modelo.*"
				   width="100%" height="100%" alpha=".7">
	<fx:Declarations>
		<s:RadioButtonGroup id="radiogroup"/>
		<s:CallResponder id="indicesFinancierosResult"/>
		<modelo:Modelo id="modelo"
					   fault="Alert.show(event.fault.faultString + '\n' + event.fault.faultDetail)"
					   showBusyCursor="true"/>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import mx.collections.ArrayCollection;
			import mx.controls.Alert;
			import mx.events.CloseEvent;
			import mx.events.DragEvent;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			import mx.olap.OLAPResult;
			import mx.rpc.events.ResultEvent;
			
			import spark.components.DataGrid;
			[Bindable]private var arrTodos:ArrayCollection = new ArrayCollection();
			[Bindable]private var arrSelect:ArrayCollection = new ArrayCollection();
			public var ejecutando:Function;
			public var agf:Object;
			
			protected function list_dragCompleteHandler(event:DragEvent):void
			{
				// TODO Auto-generated method stub
				(event.target as List).dataProvider.removeItemAt((event.target as List).selectedIndex);
			}
			
			protected function lTodos_creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				
				indicesFinancierosResult.token = modelo.indicesFinancieros();
				indicesFinancierosResult.addEventListener(ResultEvent.RESULT, llenaList);
				
			}
			
			private function llenaList(event:ResultEvent):void{
				var arr:ArrayCollection = event.result as ArrayCollection;
				for each(var o:Object in arr){
					if(o['oa'] == 0){
						arrTodos.addItem(o);
					} else {
						arrSelect.addItem(o);
					}
				}
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generatedmethod stub
				var arr:Array =[];
				for each(var o:Object in arrSelect){
					arr.push(o['id_indice_financiero']); 					
				}
				modelo.insertarConfig(arr);
			}
			
			protected function btnExport_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				try{
					var request:URLRequest = new URLRequest('http://localhost:8888/servicios/export.php');
					
					request.method = URLRequestMethod.POST;
					
					request.data = new URLVariables();
					var val:String = ';';
					this.agf.olap.dataProvider.query.getAxis(0);
					var n:int = (this.agf.olap.dataProvider as OLAPResult).axes[1].positions.length;
					var m:int = (this.agf.olap.dataProvider as OLAPResult).axes[0].positions.length;
					for(var i:int = 0; i < m - 1; i++){
						val += ';';
					}
					val += '\n;';
					for(i = 0; i < m; i++){
						val += this.agf.olapx[i]['name'] + ';';
					}
					val = val.substring(0, val.length - 1);				
					val += '\n';
					for(i = 0; i < n; i++){
						val += this.agf.olapy[i]['name'] + ';';
						for(var j:int = 0; j < m; j++){
							val += (this.agf.olap.dataProvider as OLAPResult).getCell(i, j).value + ';';
						}
						val = val.substring(0, val.length - 1);
						val += '\n';
					}
					
					request.data.nombre = val;
					navigateToURL(request,"_blank");
				} catch(e:*) {
					Alert.show('Debe generar el Gráfico antes de exportar', 'Atención');
				} 
				
				PopUpManager.removePopUp(this.agf.config);
			}
			
			protected function titlewindow1_closeHandler(event:CloseEvent):void
			{
				// TODO Auto-generated method stub
				PopUpManager.removePopUp(this.agf.config);
			}
			
		]]>
	</fx:Script>
	<s:TitleWindow top="100" width="500" height="337" horizontalCenter="0"
				   title="Configurar Exportación" close="titlewindow1_closeHandler(event)">
		<mx:Accordion y="9" width="100%" height="257" horizontalCenter="0">
			<s:NavigatorContent width="100%" height="100%" label="Seleccionar Indices">
				<s:List id="lTodos" x="15" y="28" width="200" height="150"
						creationComplete="lTodos_creationCompleteHandler(event)"
						dragComplete="list_dragCompleteHandler(event)" dragEnabled="true"
						dropEnabled="true" labelField="nombre" dataProvider="{arrTodos}">
					
				</s:List>
				<s:List id="lSelect" x="266" y="28" width="200" height="150"
						dragComplete="list_dragCompleteHandler(event)" dragEnabled="true"
						dropEnabled="true" labelField="nombre" dataProvider="{arrSelect}"></s:List>
				<s:Label x="15" y="10" text="Indices"/>
				<s:Label x="266" y="10" text="Seleccionados"/>
				<s:Button y="186" label="Guardar" horizontalCenter="0" click="button1_clickHandler(event)"/>
			</s:NavigatorContent>
			<s:NavigatorContent width="100%" height="100%" label="Periodo Principal">
				<s:HGroup y="27" width="90%" height="42" horizontalAlign="center"
						  horizontalCenter="0">
					<s:RadioButton label="Q1" groupName="radiogroup"/>
					<s:RadioButton label="Q2" groupName="radiogroup"/>
					<s:RadioButton label="Q3" groupName="radiogroup"/>
					<s:RadioButton label="Q4" groupName="radiogroup"/>
				</s:HGroup>
			</s:NavigatorContent>
		</mx:Accordion>
		<s:Button bottom="10" label="Exportar" horizontalCenter="0" click="btnExport_clickHandler(event)"/>
	</s:TitleWindow>
</s:BorderContainer>
