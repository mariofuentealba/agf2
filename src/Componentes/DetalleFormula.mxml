<?xml version="1.0" encoding="utf-8"?>
<s:Group xmlns:fx="http://ns.adobe.com/mxml/2009" width="100%" height="200" 
				xmlns:s="library://ns.adobe.com/flex/spark" 
				xmlns:mx="library://ns.adobe.com/flex/mx" 
				creationComplete="creationCompleteHandler(event)">
	<fx:Script>
		<![CDATA[
			import VO.FormulaVO;
			import VO.IndiceVO;
			import VO.Item_Xbrl;
			
			import model.ModelApp;
			
			import mx.collections.ArrayCollection;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			[Bindable] public var formula:FormulaVO;
			public var fnClick:Function;
			public var fnDefault:Function;
			private var modelApp:ModelApp = model.ModelApp.getInstance();
			
			protected function creationCompleteHandler(event:FlexEvent):void
			{
				// TODO Auto-generated method stub
				//formula = this.data as FormulaVO;
			}
			
			protected function button1_clickHandler(event:MouseEvent):void
			{
				// TODO Auto-generated method stub
				var opcionesFormula:IndiceFormula = new IndiceFormula();
				
				var objFiltro:Object ={};
				for each(var obj:* in this.formula.arrCampos){
					objFiltro[obj.id + ':' + obj.tipo] = obj;
				}
				
				
				opcionesFormula.formula = this.formula;
				var arr:ArrayCollection = new ArrayCollection();
				
				for each(obj in modelApp.arrXBRL){
					var xb:Item_Xbrl = new Item_Xbrl();
					xb.fillAttributes = obj.clone;
					if(objFiltro[obj.id + ':' + obj.tipo] == null){
						var xmlContextos:XMLList = obj.clone..xbrl_contexto;
						xb.clone = obj.clone;
						for each(var contex:XML in xmlContextos) {				//
							xb.arrContexto.push(contex.@tipo[0]);
						}
						arr.addItem(xb);
					}
					
				}
				
				opcionesFormula.arrXbrl = arr;
				arr = new ArrayCollection();
				
				for each(obj in modelApp.arrFormulasIndice){
					var ind:IndiceVO = new IndiceVO();
					ind.fillAttributes = obj.clone;
					xb.clone = obj.clone;
					if(objFiltro[obj.id + ':' + obj.tipo] == null){
						arr.addItem(xb);
					}
				}
				
				opcionesFormula.arrIndices = arr;
				arr = new ArrayCollection();
				for each(obj in modelApp.arrItemManual){
					xb = new Item_Xbrl();
					xb.fillAttributes = obj.clone;
					xb.clone = obj.clone;
					if(objFiltro[obj.id + ':' + obj.tipo] == null){
						xmlContextos = obj.clone..xbrl_contexto;
						//
						for each(contex in xmlContextos) {				//
							xb.arrContexto.push(contex.@tipo[0]);
						}
						arr.addItem(xb);
						arr.addItem(xb);
					}
				}
				
				opcionesFormula.arrManual = arr;
				PopUpManager.addPopUp(opcionesFormula, agf(this.parentApplication));
				opcionesFormula.width = this.parentApplication.width;
				opcionesFormula.height = this.parentApplication.height;
				opcionesFormula.fnPost = cierraPoPup;
				PopUpManager.centerPopUp(opcionesFormula);
				if(event == null){
					PopUpManager.removePopUp(opcionesFormula);
				}
				
			}
			
			private function cierraPoPup(pop:*, datosFormula:FormulaVO):void{		
				
				PopUpManager.removePopUp(pop);
				if(datosFormula.defaults){
					fnDefault.call(this, datosFormula);
				}
				button1_clickHandler(null)
				
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<s:Group width="100%" height="100%">
		
		<s:Label x="19" y="10" fontSize="12" fontWeight="bold" text="Formula Principal"/>
		<s:HGroup left="10" right="10" bottom="10" gap="15">
			<s:DataGrid left="10" bottom="10" width="500" height="121" dataProvider="{formula.arrCampos}">
				<s:columns>
					<s:ArrayList>
						<s:GridColumn visible="true" dataField="codigo"
									  headerText="Codigo"></s:GridColumn>
						<s:GridColumn visible="true" dataField="etiqueta"
									  headerText="etiqueta"></s:GridColumn>
						<s:GridColumn dataField="contexto" headerText="Contexto"></s:GridColumn>
						
						
						
						
					</s:ArrayList>
				</s:columns>
			</s:DataGrid>
		</s:HGroup>
		
		<s:Label visible="{formula.defaults}" y="10" right="25" text="Default"/>
		<s:Label x="10" y="52" fontSize="12" fontWeight="bold" text="Campos"/>
		<s:Button y="28" right="21" label="Editar" click="button1_clickHandler(event)"/>
		<s:Label x="19" y="30" fontSize="16" fontWeight="bold" text="{formula.formula}"/>
		
	</s:Group>
</s:Group> 